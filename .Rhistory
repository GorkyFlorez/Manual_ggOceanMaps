library(plyr)
library(dplyr)
library(ggplot2)
library(rgdal)
library(tmap)
library(ggmap)
library(dplyr)
library(sf)
library(ggspatial)
library(rlang)
library(broom)
library(tidyverse)
library(readxl)
library(raustats)
library(purrr)
library("Census2016")
#------------------------------------------------------------------------
library(plyr)
library(dplyr)
library(ggplot2)
library(rgdal)
library(tmap)
library(ggmap)
library(dplyr)
library(sf)
library(ggspatial)
library(rlang)
library(broom)
library(tidyverse)
library(readxl)
library(raustats)
library(purrr)
library("Census2016")
install.packages("Census2016")
install.packages("raustats")
#------------------------------------------------------------------------
library(plyr)
library(dplyr)
library(ggplot2)
library(rgdal)
library(tmap)
library(ggmap)
library(dplyr)
library(sf)
library(ggspatial)
library(rlang)
library(broom)
library(tidyverse)
library(readxl)
library(raustats)
library(purrr)
library("Census2016")
#------------------------------------------------------------------------
library(plyr)
library(dplyr)
library(ggplot2)
library(rgdal)
library(tmap)
library(ggmap)
library(dplyr)
library(sf)
library(ggspatial)
library(rlang)
library(broom)
library(tidyverse)
library(readxl)
library(raustats)
library(purrr)
library("Census2016")
install.packages("raustats")
library(sf)
#Select the location where the ASGS files are saved
AUS_SA2_shp <- read_sf("K:/Alteryx/ASGS","SA2_2016_AUST")
AUS_CED_shp <- read_sf("K:/Alteryx/ASGS","CED_2016_AUST")
#------------------------------------------------------------------------
library(plyr)
library(dplyr)
library(ggplot2)
library(rgdal)
library(tmap)
library(ggmap)
library(dplyr)
library(sf)
library(ggspatial)
library(rlang)
library(broom)
library(tidyverse)
library(readxl)
library(raustats)
library(purrr)
library("Census2016")
library(sf)
#Select the location where the ASGS files are saved
AUS_SA2_shp <- read_sf("K:/Alteryx/ASGS","SA2_2016_AUST")
library(ggplot2)
library(dplyr)
#Read in the SA2 shapefile downloaded from the ABS
AUS_SA2_shp <- read_sf("K:/Alteryx/ASGS","SA2_2016_AUST")
#filter the Australian SA2 shapefile for only Victoria
AUS_SA2_VIC_shp <- AUS_SA2_shp %>%
filter(STE_CODE16 == 2)
#plot a map of Australia (grey) and a map of Victoria (green)
ggplot() +
geom_sf(data=AUS_SA2_shp)+
geom_sf(data=AUS_SA2_VIC_shp,fill = "#A5D46A")+
ggtitle("Australian SA2 map") +
xlab("Longitude") +
xlim(110,155)+
ylab("Latitude") +
theme_bw()
#start with the data "world_sans_antarctica_fixed from the previous set
#filter for the UN region called "Africa"
world_Africa <- world_sans_antarctica_fixed %>%
filter(REGION_UN == "Africa")
#start with the data "world_sans_antarctica_fixed from the previous set
#filter for the UN region called "Africa"
world_Africa <- world_sans_antarctica_fixed %>%
filter(REGION_UN == "Africa")
#check the data looks good
world_Africa
#produce the map (same function as previously)
ggplot() +
geom_sf(data = world_Africa,
aes(fill = life_expectancy),
size = 0.25) +
coord_sf(crs = 54030) +  # Robinson
scale_fill_viridis_c(option = "viridis") +
labs(fill = "Life expectancy") +
theme_void() +
theme(legend.position = "bottom")
#------------------------------------------------------------------------
# from tmap vignette
# https://cran.r-project.org/web/packages/tmap/vignettes/tmap-changes-v2.html#tm_tiles
library(tmap)
data(World, metro)
tmap_mode("view")
tm_basemap(leaflet::providers$CartoDB.PositronNoLabels, group = "CartoDB basemap") +
tm_shape(World) +
tm_polygons("HPI", group = "Countries") +
tm_tiles(leaflet::providers$CartoDB.PositronOnlyLabels, group = "CartoDB labels") +
tm_shape(metro) +
tm_dots(col = "red", group = "Metropolitan areas") +
tm_view(set.view = 1)
library(ggOceanMaps)
install.packages("ggOceanMaps")
library(ggOceanMaps)
library(ggOceanMaps)
dt <- data.frame(lon = c(-30, -30, 30, 30), lat = c(50, 80, 80, 50))
basemap(data = dt, bathymetry = TRUE) +
geom_polygon(data = transform_coord(dt), aes(x = lon, y = lat), color = "red", fill = NA)
dt <- data.frame(lon = c(-30, -30, 30, 30), lat = c(50, 80, 80, 50))
basemap(data = dt, bathymetry = TRUE) +
geom_polygon(data = transform_coord(dt), aes(x = lon, y = lat), color = "red", fill = NA)
library(ggOceanMaps)
dt <- data.frame(lon = c(-30, -30, 30, 30), lat = c(50, 80, 80, 50))
basemap(data = dt, bathymetry = TRUE) +
geom_polygon(data = transform_coord(dt), aes(x = lon, y = lat), color = "red", fill = NA)
library(ggOceanMaps)
dt <- data.frame(lon = c(-30, -30, 30, 30), lat = c(50, 80, 80, 50))
basemap(data = dt, bathymetry = TRUE) +
geom_polygon(data = transform_coord(dt), aes(x = lon, y = lat), color = "red", fill = NA)
dt <- data.frame(lon = c(-150, 150), lat = c(60, 90))
basemap(data = dt, bathymetry = TRUE) +
geom_spatial_point(data = dt, aes(x = lon, y = lat), color = "red")
basemap(limits = c(0, 60, 68, 80), rotate = TRUE) +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
)
basemap(limits = c(0, 60, 68, 80)) + labs(x = NULL, y = NULL)
basemap(limits = c(0, 60, 68, 80)) + labs(x = NULL, y = NULL)
basemap(limits = c(0, 60, 68, 80), rotate = TRUE) +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()
)
if(requireNamespace("ggOceanMapsData")) {
basemap(limits = 60)
}
basemap(limits = -60, bathymetry = TRUE, glaciers = TRUE)
dt <- data.frame(lon = c(-150, 150), lat = c(60, 90))
basemap(data = dt, bathymetry = TRUE) +
geom_spatial_point(data = dt, aes(x = lon, y = lat), color = "red")
library(ggOceanMaps)
basemap(60)
